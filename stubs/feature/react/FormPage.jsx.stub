import React from 'react';
import { Head, useForm, Link } from '@inertiajs/react';
import AuthenticatedLayout from '@/Layouts/AuthenticatedLayout';

export default function FormPage({ auth, item }) {
    // SYNC_FORM_DATA_START
    const { data, setData, post, put, processing, errors } = useForm({
        name: item?.name || '',
        status: item?.status ?? true,
    });
    // SYNC_FORM_DATA_END

    function handleSubmit(e) {
        e.preventDefault();
        if (item) {
            put(route('{{ pluralKebabName }}.update', item.id));
        } else {
            post(route('{{ pluralKebabName }}.store'));
        }
    }

    return (
        <AuthenticatedLayout
            user={auth.user}
            header={<h2 className="font-semibold text-xl text-gray-800 leading-tight">{item ? 'Edit' : 'Create'} {{ spacedName }}</h2>}
        >
            <Head title={item ? 'Edit' : 'Create' + ' {{ spacedName }}'} />

            <div className="py-12">
                <div className="max-w-7xl mx-auto sm:px-6 lg:px-8">
                    <div className="bg-white overflow-hidden shadow-sm sm:rounded-lg">
                        <div className="p-6 bg-white border-b border-gray-200">
                             <form onSubmit={handleSubmit}>
                                {/* SYNC_FORM_FIELDS_START */}
                                <div className="mb-4">
                                    <label className="block text-gray-700 text-sm font-bold mb-2" htmlFor="name">
                                        Name
                                    </label>
                                    <input
                                        id="name"
                                        type="text"
                                        value={data.name}
                                        onChange={(e) => setData('name', e.target.value)}
                                        className="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
                                    />
                                    {errors.name && <div className="text-red-500 text-xs mt-1">{errors.name}</div>}
                                </div>
                                <div className="mb-4">
                                     <label className="block text-gray-700 text-sm font-bold mb-2" htmlFor="status">
                                        Status
                                    </label>
                                    <select
                                        id="status"
                                        value={data.status}
                                        onChange={e => setData('status', e.target.value === 'true')}
                                        className="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
                                    >
                                        <option value={true}>Active</option>
                                        <option value={false}>Inactive</option>
                                    </select>
                                </div>
                                {/* SYNC_FORM_FIELDS_END */}

                                <div className="flex items-center justify-between">
                                    <button type="submit" disabled={processing} className="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline">
                                        {item ? 'Update' : 'Create'}
                                    </button>
                                    <Link href={route('{{ pluralKebabName }}.index')} className="text-gray-600">Cancel</Link>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </AuthenticatedLayout>
    );
}
